// Idea 1

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    vector<int> nums1 = {1, 2, 3, 0, 0, 0}, nums2 = {2, 5, 6};
    int m = 3, n = 3;
    for (int i = m; i < m+n; i++)
        nums1[i] = nums2[i-m];
    sort (nums1.begin(), nums1.end());
    
    for (int i = 0; i < m+n; i++)
        cout << nums1[i] << "  ";
}


// Idea 2

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    vector<int> nums1 = {1, 2, 3, 0, 0, 0}, nums2 = {2, 5, 6};
    int m = 3, n = 3;
    int ptr1 = 0, ptr2 = 0;
    for (int i = 0; i < m+n; i++){
        if (ptr1 >= m + ptr2 || nums1[ptr1] > nums2[ptr2]) {
            nums1.insert(nums1.begin() + ptr1, nums2[ptr2]);
            ptr2++;
        }
        ptr1++;
    }
    
    for (int i = 0; i < m+n; i++)
        cout << nums1[i] << "  ";
}


// Idea 3

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    vector<int> nums1 = {1, 2, 3, 0, 0, 0}, nums2 = {2, 5, 6};
    int m = 3, n = 3;

    int i1 = m - 1;
    int i2 = n - 1;
    int i = nums1.size() - 1;

    while (i2 >= 0){
        if ((i1 < 0) || (nums2[i2] >= nums1[i1])){
            nums1[i] = nums2[i2];
            i2--;
        } else {
            nums1[i] = nums1[i1];
            i1--;
        }
        i--;
    }

    
    for (int i = 0; i < m+n; i++)
        cout << nums1[i] << "  ";
}
